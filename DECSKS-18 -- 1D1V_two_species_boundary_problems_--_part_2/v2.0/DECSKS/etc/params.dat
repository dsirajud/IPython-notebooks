#=============================================================================#
#     Input file : 1D1V DECSKS for the two-species Vlasov-Poisson system
#=============================================================================#
                                                                              
Simulation specifications are not case insensitive, except 'None' and values, e.g. np.pi

Domain specifications (used in lib.domain.Setup):
=================================================
Requirements for value entry:

(1) Enter the number of cells as int or None
(2) Enter the dimensions as float or None
(3) if needed, use numpy prefix as np, e.g. np.pi
-------------------------------------------------------------------------------

Number of grid points, x = 240
lower boundary value ax = -10.
upper boundary value bx = 10.
lower boundary condition = absorbing
upper boundary condition = absorbing

Number of grid points, y = None
lower boundary value ay = None
upper boundary value by = None
lower boundary condition = None
upper boundary condition = None

Number of grid points, z = None
lower boundary value az = None
upper boundary value bz = None
lower boundary condition = None
upper boundary condition = None

Number of grid points, vx = 400
lower boundary value avx = -14.0
upper boundary value bvx =  14.0
lower boundary condition = periodic
upper boundary condition = periodic

Number of grid points, vy = None
lower boundary value avy = None
upper boundary value bvz = None
lower boundary condition = None
upper boundary condition = None

Number of grid points, vz = None
lower boundary value avz = None
upper boundary value bvz = None
lower boundary condition = None
upper boundary condition = None

Number of time steps, Nt = 500
Simulation duration, time T = 5

-------------------------------------------------------------------------------
High order corrections 
======================

Global error order of scheme (int) = 7

* Note: if fd derivatives are used, user must generate tables using script in 
  bin/ up to required global error indicated here 
--------------------------------------------------------------------------------
Specify the type of high order correction below for every phase space 
variable as fourier, fd, or None. 

* Note: all unused phase space vars must be set to None

high order correction on x: fd
high order correction on y: None
high order correction on z: None

high order correction on vx: fourier
high order correction on vy: None
high order correction on vz: None

--------------------------------------------------------------------------------
Initial density specification
==============================
density profile: cosine 22-bell, ion cosine 22-bell

# options:

    1D-1V options
    -------------
    bump on tail
    Landau
    1D1V bell
    flower

    1D, one speed options
    -------------
    gaussian
    n cosine bell
    rectangle and Gaussian bell
    triangle
    triple gaussian bell
--------------------------------------------------------------------------------
split scheme = LF2
splitting coeffs in filename (in ./etc/): params_splitting_coeffs.dat

#   split scheme options
    --------------------
    LF2
    Y4
    O6-4
    O11-6
    O14-6

--------------------------------------------------------------------------------
Plot window specification (used in lib.plots.Setup)
--------------------------------------------------------------------------------

x, min = -10.2
x, max = 10.2

y, min = -14.
y, max = 14.

--------------------------------------------------------------------------------
record outputs? (yes/no): no
output filename: params_output.dat
--------------------------------------------------------------------------------
Boundary conditions on phi (Dirichlet BC, DBC) or dphi (Neumann BC, NBC) 
================================================================================

- 'lower' and 'upper' refer to domain boundaries on abscissas x, y, z

-  if configuration variable is set above to periodic, this section is ignored 
   (a periodic field solver is used along with the corresponding high order method 
    the user indicated, i.e. a fourier solver is used if fourier corrections are
    specified above, and an fd solver is used if fd corrections are specified above)

-  if a variable or value is not used, must denote by 'None' (case sensitive)

GENERAL GUIDELINES

-  if desired conditions are inherently DBC/DBC, DBC/NBC, or NBC/DBC enter in the condition
   and set all other text fields to 'None' (without quotes)

-  if desired conditions are inherently NBC/NBC, specify both NBC conditions and also the DBC at lower boundary
-  this is so DECSKS forms and tracks any needed auxillary objects (e.g. charge accumulated at walls)
   
-  if a boundary is held at constant potential, denote DBC with numerical value 

-  if value is to be computed self-consistently based on surface charge densities 
   on walls, denote by 'self-consistent' ('Neumann')

-  if a symmetry BC is desired (lower boundary only available), set lower boundary condition = 0 ('Neumann')

RECIPES IN 1D1V:

    ordering is lower/upper (e.g. self-consistent/bias means self-consistent wall calculation
                             on lower boundary, and biased electrode at fixed value at upper boundary)


    - bias/bias (DBC/DBC)

        Dirichlet lower boundary condition on x = BIAS VALUE
        Dirichlet upper boundary condition on x = BIAS VALUE

    - symmetry/bias (NBC/DBC) -- symmetry on the upper boundary is not available

        Neumann lower boundary condition on x = 0
        Dirichlet upper boundary condition on x = BIAS VALUE

    - symmetry/self-consistent (NBC/NBC) : symmetry on the upper boundary is not available

                                        Two NBCs are recasted as an equivalent NBC-DBC pair at left boundary,
                                        the value at the upper wall is not enforced but fulfilled automatically
                                        for well-posed problems (e.g. quasineutral systems), the DBC is set
                                        to zero so that the potential at any point x gives the potential difference
                                        directly; in general this is just some reference potential of our choosing

        Neumann lower boundary condition on x = 0
        Neumann upper boundary condition on x = self-consistent
        Dirichlet upper boundary condition on x = 0

    - self-consistent/self-consistent (NBC/NBC) : 

                                        Two NBCs are recasted as an equivalent NBC-DBC pair at left boundary,
                                        the value at the upper wall is not enforced but fulfilled automatically
                                        for well-posed problems (e.g. quasineutral systems), the DBC is set
                                        to zero so that the potential at any point x gives the potential difference
                                        directly; in general this is just some reference potential of our choosing

        Neumann lower boundary condition on x = self-consistent
        Neumann upper boundary condition on x = self-consistent
        Dirichlet lower boundary condition on x = 0

        or

        Neumann lower boundary condition on x = self-consistent
        Neumann upper boundary condition on x = self-consistent
        Dirichlet upper boundary condition on x = 0

--------------------------------------------------------------------------------
Enter conditions below
================================================================================

Dirichlet lower boundary condition on x = -5.
Dirichlet upper boundary condition on x = 5.

Neumann lower boundary condition on x = None
Neumann upper boundary condition on x = None

Dirichlet lower boundary condition on y = None
Dirichlet upper boundary condition on y = None

Neumann lower boundary condition on y = None
Neumann upper boundary condition on y = None

Dirichlet lower boundary condition on z = None
Dirichlet upper boundary condition on z = None

Neumann lower boundary condition on z = None
Neumann upper boundary condition on z = None
