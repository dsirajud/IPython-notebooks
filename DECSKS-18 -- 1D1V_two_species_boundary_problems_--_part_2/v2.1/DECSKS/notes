
boundaryconditions.charge_collection_upper/lower_boundary errata:

    -- used vz.prepointmesh (index grid) instead of vz.prepointvaluemesh

    -- neglected to take into account the sign of velocity in discerning the appropriate density

    -- forgot to change the boundary on the upper condition to >= z.N - 1, (was left as <= 0 per the lower condition)

def charge_collection_upper_boundary(f_old, Uf, zpostpointmesh, k, z, vz, sim_params, charge):

    # this discriminates vx vs. x, as the boundary condition function handle
    # sim_params['BC'][z.str]['lower' or 'upper'] for z.str = 'vx' is never set to 'charge_collection'
    # in lib.read
    f_absorbed = np.where(z.postpointmesh >= (z.N-1), f_old, 0)
    Uf_absorbed = np.where(z.postpointmesh >= (z.N - 1), Uf, 0)
    sigma_n = np.sum(vz.prepointvaluemesh * f_absorbed * vz.width)

    # passed by reference, no need for explicit return
    sim_params['sigma'][z.str]['upper'] = \
      sim_params['sigma'][z.str]['upper'] + charge*sigma_n

    f_old, Uf = absorbing_upper_boundary(f_old, Uf, zpostpointmesh, k, z, vz, sim_params, charge)

    return f_old, Uf




