import math
import numpy
import pylab

def simplegrid():

    xmin = 0.0
    xmax = 1.0

    nzones = 7

    dx = (xmax - xmin)/float(nzones)

    xl = numpy.arange(nzones)*dx
    xr = (numpy.arange(nzones)+1)*dx

    xc = 0.5*(xl + xr)

    pylab.plot([xmin,xmax], [0,0], color="k", lw=2)


    n = 0
    while (n < nzones):


        # draw center marker
        pylab.plot(xc[n], 0, 'D', color="k")

        # draw edge marker
        if (n == 0):
            pylab.plot([xl[0], xl[0]], [-0.05, 0.05], color="g")

        pylab.plot([xr[n], xr[n]], [-0.05, 0.05], color="g")

        n += 1


    # left boundary
    pylab.text(xl[0], -0.075, r"$-1/2$",
               horizontalalignment='center', verticalalignment='top',
               fontsize="small", color = 'g')

    # left boundary
    pylab.text(xl[0], -0.155, r"$x = a$",
               horizontalalignment='center', verticalalignment='top',
               fontsize="medium", color = 'red')


    # right boundary
    pylab.text(xr[-1], -0.075, r"$(N-1) + 1/2$",
               horizontalalignment='center', verticalalignment='top',
               fontsize="small", color = 'g')


    # right boundary
    pylab.text(xr[-1], -0.125, r"$x = b$",
               horizontalalignment='center', verticalalignment='top',
               fontsize="medium", color = 'red')


    # label a few edges
    pylab.text(xl[1], -0.075, r"$1/2$",
               horizontalalignment='center', verticalalignment='top',
               fontsize="small", color = 'g')

    pylab.text(xl[2], -0.075, r"$3/2$",
               horizontalalignment='center', verticalalignment='top',
               fontsize="small", color = 'g')

    pylab.text(xl[3], -0.075, r"$i-1/2$",
               horizontalalignment='center', verticalalignment='top',
               fontsize="small", color = 'g')

    pylab.text(xl[4], -0.075, r"$i + 1/2$",
               horizontalalignment='center', verticalalignment='top',
               fontsize="small", color = 'g')

    pylab.text(xl[5], -0.075, r"$\ldots$",
               horizontalalignment='center', verticalalignment='top',
               fontsize="small", color = 'g')

    pylab.text(xl[6], -0.075, r"$(N-1) - 1/2$",
               horizontalalignment='center', verticalalignment='top',
               fontsize="small", color = 'g')



    # label a few cell-centers at the center, general i
    pylab.text(xc[0], -0.1, r"$0$", 
               horizontalalignment='center', verticalalignment='top', 
               fontsize="small")

    pylab.text(xc[1], -0.1, r"$1$", 
               horizontalalignment='center', verticalalignment='top', 
               fontsize="small")


    pylab.text(xc[2], -0.1, r"$\ldots$", 
               horizontalalignment='center', verticalalignment='top', 
               fontsize="small")

    pylab.text(xc[3], -0.1, r"$i$", 
               horizontalalignment='center', verticalalignment='top', 
               fontsize="small")

    pylab.text(xc[4], -0.1, r"$\ldots$",
               horizontalalignment='center', verticalalignment='top',
               fontsize="small")

    pylab.text(xc[5], -0.1, r"$N-2$",
               horizontalalignment='center', verticalalignment='top',
               fontsize="small")

    pylab.text(xc[6], -0.1, r"$N-1$",
               horizontalalignment='center', verticalalignment='top',
               fontsize="small")



    pylab.axis([xmin-0.5*dx,xmax+0.5*dx, -0.25, 0.6])
    pylab.axis("off")

    pylab.subplots_adjust(left=0.05,right=0.95,bottom=0.05,top=0.95)

    f = pylab.gcf()
    f.set_size_inches(9.0,2.0)

    pylab.savefig("cell-centered_grid.png")

if __name__== "__main__":
    simplegrid()
