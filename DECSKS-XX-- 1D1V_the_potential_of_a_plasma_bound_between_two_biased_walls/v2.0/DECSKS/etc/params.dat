#=============================================================================#
#     Input file : 1D1V DECSKS for the two-species Vlasov-Poisson system
#=============================================================================#
                                                                              
Simulation specifications are not case insensitive, except 'None' and values, e.g. np.pi

Domain specifications (used in lib.domain.Setup):
=================================================
Requirements for value entry:

(1) Enter the number of cells as int or None
(2) Enter the dimensions as float or None
(3) if needed, use numpy prefix as np, e.g. np.pi
-------------------------------------------------------------------------------

Number of grid points, x = 240
lower boundary value ax = -2 * np.pi / .3
upper boundary value bx = 2 * np.pi / .3
lower boundary condition = periodic
upper boundary condition = periodic

Number of grid points, y = None
lower boundary value ay = None
upper boundary value by = None
lower boundary condition = None
upper boundary condition = None

Number of grid points, z = None
lower boundary value az = None
upper boundary value bz = None
lower boundary condition = None
upper boundary condition = None

Number of grid points, vx = 300
lower boundary value avx = -8.0
upper boundary value bvx =  8.0
lower boundary condition = periodic
upper boundary condition = periodic

Number of grid points, vy = None
lower boundary value avy = None
upper boundary value bvz = None
lower boundary condition = None
upper boundary condition = None

Number of grid points, vz = None
lower boundary value avz = None
upper boundary value bvz = None
lower boundary condition = None
upper boundary condition = None

Number of time steps, Nt = 44
Simulation duration, time T = 22

-------------------------------------------------------------------------------
High order corrections 
======================

Global error order of scheme (int) = 7

* Note: if fd derivatives are used, user must generate tables using script in 
  bin/ up to required global error indicated here 
--------------------------------------------------------------------------------
Specify the type of high order correction below for every phase space 
variable as fourier, fd, or None. 

* Note: all unused phase space vars must be set to None

high order correction on x: fd
high order correction on y: None
high order correction on z: None

high order correction on vx: fourier
high order correction on vy: None
high order correction on vz: None

--------------------------------------------------------------------------------
Initial density specification
==============================
density profile: bump on tail, const

# options:

    1D-1V options
    -------------
    bump on tail
    Landau
    1D1V bell
    flower

    1D, one speed options
    -------------
    gaussian
    n cosine bell
    rectangle and Gaussian bell
    triangle
    triple gaussian bell
--------------------------------------------------------------------------------
split scheme = LF2
splitting coeffs in filename (in ./etc/): params_splitting_coeffs.dat

#   split scheme options
    --------------------
    LF2
    Y4
    O6-4
    O11-6
    O14-6

--------------------------------------------------------------------------------
Plot window specification (used in lib.plots.Setup)
--------------------------------------------------------------------------------

x, min = -10.
x, max = 10.

y, min = -8
y, max = 8

--------------------------------------------------------------------------------
record outputs? (yes/no): no
output filename: params_output.dat
--------------------------------------------------------------------------------
Potential (phi) boundary conditions (currently only support periodic BCs on E)
================================================================================
- 'lower' and 'upper' refer to domain boundaries on abscissas x, y, z
-  if a variable is not simulated, must denote by 'None' (case sensitive)
-  if value is to be computed self-consistently, denote by 'self-consistent'
-  if value is determined per periodic boundary conditions, this section is ignored
-  if value is fixed at a value, denote with numerical value

lower boundary condition on x = -5
upper boundary condition on x = 5

lower boundary condition on y = None
upper boundary condition on y = None

lower boundary condition on z = None
upper boundary condition on z = None
